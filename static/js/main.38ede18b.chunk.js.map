{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Movie.js","components/Search.js","components/App.js","components/Detail.js","components/Review.js","components/Error404.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","props","className","text","Movie","movie","Poster","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","MOVIE_API_URL","initialState","loading","data","errorMessage","reducer","state","action","payload","error","App","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","movies","activePage","totalCount","parseInt","totalResults","Response","Error","role","map","index","key","Title","to","imdbID","align","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","Detail","poster","href","aria-hidden","src","alt","Plot","Ratings","rating","Source","Value","Runtime","Released","Country","Genre","Director","Writer","Actors","Awards","Language","Metascore","imdbRating","imdbVotes","Type","DVD","BoxOffice","Production","Review","id","params","DETAIL_MOVIE_API_URL","Error404","data-h1","data-p","ReactDOM","render","basename","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"qSAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCRSC,EARA,SAACC,GACd,OACE,4BAAQC,UAAU,cAChB,4BAAKD,EAAME,QCsBFC,EAxBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACiB,QAAjBA,EAAMC,QAA+CD,EAAMC,Q,QC4B7DC,EA7BA,SAACN,GAAW,IAAD,EACcO,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,KAiBxB,OACI,0BAAMR,UAAU,UACd,2BACES,MAAOF,EACPG,SAlByB,SAACC,GAChCH,EAAeG,EAAEC,OAAOH,QAkBlBI,KAAK,SAEP,2BAAOC,QAbc,SAACH,GAC1BA,EAAEI,iBACFhB,EAAMiB,OAAOT,IAW2BM,KAAK,SAASJ,MAAM,aCjB1DQ,G,MAAa,qDAFG,eAKhBC,EAAe,CACnBC,SAAS,EACTC,KAAM,GACNC,cAAc,GAIVC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOX,MACb,IAAK,wBACH,OAAO,eACFU,EADL,CAEEJ,SAAS,EACTE,cAAc,IAElB,IAAK,wBACH,OAAO,eACFE,EADL,CAEEJ,SAAS,EACTC,KAAMI,EAAOC,UAEjB,IAAK,wBACH,OAAO,eACFF,EADL,CAEEJ,SAAS,EACTE,aAAcG,EAAOE,QAEzB,IAAK,qBACH,OAAO,eACFH,EADL,CAEEJ,SAAS,EACTC,KAAMI,EAAOC,UAEjB,QACE,OAAOF,IA2HEI,EAtHH,WAAO,IAAD,EACUC,qBAAWN,EAASJ,GAD9B,mBACTK,EADS,KACFM,EADE,KAGhBC,qBAAU,WAERC,MAAMd,GACHe,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAENN,EAAS,CACPhB,KAAM,wBACNY,QAAS,CACPW,OAAQD,EAAa9B,OACrBgC,WAAY,EACZC,WAAYC,SAASJ,EAAaK,cAClCjC,YA3DY,sBAiEpB,IAiCQa,EAAgCG,EAAhCH,KAAMC,EAA0BE,EAA1BF,aAAcF,EAAYI,EAAZJ,QA4B5B,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,CAAQC,KAAK,iBACb,kBAAC,EAAD,CAAQe,OAhEG,SAAAT,GACbsB,EAAS,CACPhB,KAAM,0BAGRkB,MAAM,8CAAD,OAA+CxB,IACnDyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaM,SACfZ,EAAS,CACPhB,KAAM,wBACNY,QAAS,CACPW,OAAQD,EAAa9B,OACrBgC,WAAY,EACZC,WAAYC,SAASJ,EAAaK,cAClCjC,YAAaA,KAGc,0BAAvB4B,EAAaO,MACrBb,EAAS,CACPhB,KAAM,wBACNY,QAASF,EAAMH,OAGjBS,EAAS,CACPhB,KAAM,wBACNa,MAAOS,EAAaO,cAuCxB,uBAAG1C,UAAU,aAAb,yCACA,yBAAKA,UAAU,UACZmB,IAAYE,EACX,yBAAKrB,UAAU,sBACb,yBAAKA,UAAU,eAAe2C,KAAK,UACjC,0BAAM3C,UAAU,WAAhB,gBAGFqB,EACF,yBAAKrB,UAAU,gBAAgBqB,GAE/BD,EAAKgB,OAAOQ,KAAI,SAACzC,EAAO0C,GAAR,OACd,kBAAC,IAAD,CAAMC,IAAG,UAAKD,EAAL,YAAc1C,EAAM4C,OAAS/C,UAAU,QAAQgD,GAAE,kBAAa7C,EAAM8C,SAC3E,kBAAC,EAAD,CAAO9C,MAAOA,UAKnBgB,IAAYE,GACb,yBAAK6B,MAAM,UACT,kBAAC,IAAD,CACEb,WAAYjB,EAAKiB,WACjBc,kBAAmB,GACnBC,gBAAiBhC,EAAKkB,YAAc,EACpCe,mBAAoB,EACpB3C,SAvDe,SAAC4C,GACxBzB,EAAS,CACPhB,KAAM,0BAGRkB,MAAM,8CAAD,OAA+CX,EAAKb,YAApD,iBAAwE+C,IAC5EtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaM,SACfZ,EAAS,CACPhB,KAAM,wBACNY,QAAS,CACPW,OAAQD,EAAa9B,OACrBgC,WAAYE,SAASe,GACrBhB,WAAYC,SAASJ,EAAaK,cAClCjC,YAAaa,EAAKb,eAItBsB,EAAS,CACLhB,KAAM,wBACNa,MAAOS,EAAaO,iBCtDjBa,G,MAtEA,SAAC,GAAc,IAAZnC,EAAW,EAAXA,KACVoC,EAA0B,QAAhBpC,EAAKhB,OAJW,2DAIqCgB,EAAKhB,OAC1E,OACE,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,uBAAGyD,KAAK,kBAAR,QACA,uBAAGzD,UAAU,yBAAyB0D,cAAY,SAClD,8CACA,uBAAG1D,UAAU,yBAAyB0D,cAAY,SAClD,8BAAQtC,EAAK2B,QAGf,yBAAK/C,UAAU,WACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,4BAAQA,UAAU,gBAAe,yBAAK2D,IAAKH,EAAQI,IAAI,QAEzD,yBAAK5D,UAAU,YACb,wBAAIA,UAAU,eAAeoB,EAAK2B,OAClC,yBAAK/C,UAAU,cACb,2BAAKoB,EAAKyC,OAEZ,wBAAI7D,UAAU,cACZ,4BAAI,2CAEAoB,EAAK0C,QAAQlB,KAAI,SAACmB,EAAQlB,GAAT,OACf,yBAAKC,IAAKD,EAAO7C,UAAU,UACzB,4BAAQA,UAAU,UAAS,2BAAK+D,EAAOC,OAAZ,OAC3B,0BAAMhE,UAAU,SAAS+D,EAAOE,YAKxC,4BAAI,4CAAJ,IAAgC7C,EAAK8C,SACrC,4BAAI,6CAAJ,IAAiC9C,EAAK+C,SAAtC,KAAmD/C,EAAKgD,QAAxD,KACA,4BAAI,6CAAJ,IAAiChD,EAAKiD,QAGxC,wBAAIrE,UAAU,YACZ,4BAAI,8CAAJ,IAAkCoB,EAAKkD,UACvC,4BAAI,4CAAJ,IAAgClD,EAAKmD,QACrC,4BAAI,2CAAJ,IAA8BnD,EAAKoD,WAIzC,yBAAKxE,UAAU,iBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAG,2CAAH,IAA6BoB,EAAKqD,QAClC,2BAAG,6CAAH,IAA+BrD,EAAKsD,UACpC,2BAAG,8CAAH,IAAgCtD,EAAKuD,WACrC,2BAAG,+CAAH,IAAiCvD,EAAKwD,YACtC,2BAAG,8CAAH,IAAgCxD,EAAKyD,YAEvC,yBAAK7E,UAAU,SACf,2BAAG,2CAAH,IAA6BoB,EAAK6B,QAClC,2BAAG,yCAAH,IAA2B7B,EAAK0D,MAChC,2BAAG,wCAAH,IAA0B1D,EAAK2D,KAC/B,2BAAG,8CAAH,IAAgC3D,EAAK4D,WACrC,2BAAG,+CAAH,IAAiC5D,EAAK6D,oBC5D9C/D,G,MAAe,CACnBC,SAAS,EACTC,KAAM,GACNC,cAAc,IAGVC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOX,MACb,IAAK,wBACH,OAAO,eACFU,EADL,CAEEJ,SAAS,EACTE,cAAc,IAElB,IAAK,wBACH,OAAO,eACFE,EADL,CAEEJ,SAAS,EACTC,KAAMI,EAAOC,UAEjB,IAAK,wBACH,OAAO,eACFF,EADL,CAEEJ,SAAS,EACTE,aAAcG,EAAOE,QAEzB,QACE,OAAOH,IA6CE2D,EAzCA,SAAC,GAA2B,IACjCC,EADgC,EAAxBtF,MAASuF,OACjBD,GADgC,EAEdvD,qBAAWN,EAASJ,GAFN,mBAEjCK,EAFiC,KAE1BM,EAF0B,KAGlCwD,EAAoB,qDAAiDF,GAE3ErD,qBAAU,WACRC,MAAMsD,GACHrD,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAENN,EAAS,CACPhB,KAAM,wBACNY,QAASU,UAZyB,IAkBhCf,EAAgCG,EAAhCH,KAAMC,EAA0BE,EAA1BF,aAAcF,EAAYI,EAAZJ,QAE5B,OACE,yBAAKnB,UAAU,UACb,kBAAC,EAAD,CAAQC,KAAK,iBACb,6BACGkB,IAAYE,EACX,yBAAKrB,UAAU,aACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,eAAe2C,KAAK,UACjC,0BAAM3C,UAAU,WAAhB,iBAIJqB,EACF,yBAAKrB,UAAU,gBAAgBqB,GAE/B,kBAAC,EAAD,CAASD,KAAMA,OCzDVkE,G,MAXE,WACf,OACE,yBAAKtF,UAAU,cACb,6BACE,wBAAIuF,UAAQ,OAAZ,OACA,uBAAGC,SAAO,sBAAV,0B,YCWRC,IAASC,OACP,kBAAC,IAAD,CAAQC,SAAS,iBACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,cAAcC,UAAWZ,IAErC,kBAAC,IAAD,KACE,kBAAC,EAAD,SAILa,SAASC,eAAe,SRkGrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEdC,OAAM,SAAA5E,GACL6E,QAAQ7E,MAAMA,EAAM8E,c","file":"static/js/main.38ede18b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h2>{props.text}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\r\nconst Movie = ({ movie }) => {\r\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n  return (\r\n    // <div className=\"movie\">\r\n      <div className=\"item\">\r\n        <div style =\r\n          {{\r\n            backgroundImage: `url(${poster})`,\r\n            backgroundSize: 'cover', \r\n            backgroundPosition: 'center center',\r\n            backgroundRepeat: 'no-repeat',\r\n            width: '100%',\r\n            paddingTop: '120%'\r\n          }}\r\n        >\r\n        </div>\r\n        <h2 className=\"title overflow-ellipsis\">{movie.Title}</h2>\r\n        <p>({movie.Year})</p>\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  \r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  // const resetInputField = () => {\r\n  //   setSearchValue(\"\")\r\n  // }\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    // resetInputField();\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\">\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleSearchInputChanges}\r\n          type=\"text\"\r\n        />\r\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from \"react-js-pagination\";\r\nimport Header from \"./Header\";\r\nimport Movie from \"./Movie\";\r\nimport Search from \"./Search\";\r\nimport \"../App.css\";\r\n\r\nconst searchDefault = \"Spider Man\";\r\n\r\nconst MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&s=${searchDefault}`;\r\n\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: {},\r\n  errorMessage: false\r\n};\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: false\r\n      };\r\n    case \"SEARCH_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    case \"SEARCH_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    case \"HANDLE_PAGE_CHANGE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nconst App = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  useEffect(() => {\r\n    \r\n    fetch(MOVIE_API_URL)\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n  \r\n      dispatch({\r\n        type: \"SEARCH_MOVIES_SUCCESS\",\r\n        payload: {\r\n          movies: jsonResponse.Search,\r\n          activePage: 1,\r\n          totalCount: parseInt(jsonResponse.totalResults),\r\n          searchValue: searchDefault\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  const search = searchValue => {\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n\r\n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${searchValue}`)\r\n    .then(response => response.json())\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.Response === \"True\") {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: {\r\n            movies: jsonResponse.Search,\r\n            activePage: 1,\r\n            totalCount: parseInt(jsonResponse.totalResults),\r\n            searchValue: searchValue\r\n          }\r\n        });\r\n      } else if(jsonResponse.Error === \"Something went wrong.\") {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: state.data\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_FAILURE\",\r\n          error: jsonResponse.Error\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const { data, errorMessage, loading } = state;\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    dispatch({\r\n      type: \"SEARCH_MOVIES_REQUEST\"\r\n    });\r\n    \r\n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${data.searchValue}&page=${pageNumber}`)\r\n    .then(response => response.json())\r\n    .then(jsonResponse => {\r\n      if (jsonResponse.Response === \"True\") {\r\n        dispatch({\r\n          type: \"SEARCH_MOVIES_SUCCESS\",\r\n          payload: {\r\n            movies: jsonResponse.Search,\r\n            activePage: parseInt(pageNumber),\r\n            totalCount: parseInt(jsonResponse.totalResults),\r\n            searchValue: data.searchValue\r\n          }\r\n        });\r\n      } else {\r\n        dispatch({\r\n            type: \"SEARCH_MOVIES_FAILURE\",\r\n            error: jsonResponse.Error\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Header text=\"Search Films\" />\r\n      <Search search={search} />\r\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\r\n      <div className=\"movies\">\r\n        {loading && !errorMessage ? (\r\n          <div className=\"text-center col-12\">\r\n            <div className=\"spinner-grow\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : errorMessage ? (\r\n          <div className=\"errorMessage\">{errorMessage}</div>\r\n        ) : (\r\n          data.movies.map((movie, index) => (\r\n            <Link key={`${index}-${movie.Title}`} className=\"movie\" to={`/review/${movie.imdbID}`}>\r\n              <Movie movie={movie} />\r\n            </Link>\r\n          ))\r\n        )}\r\n      </div>\r\n      {(!loading && !errorMessage) && (\r\n        <div align=\"center\">\r\n          <Pagination\r\n            activePage={data.activePage}\r\n            itemsCountPerPage={10}\r\n            totalItemsCount={data.totalCount || 0}\r\n            pageRangeDisplayed={5}\r\n            onChange={handlePageChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default App;","import React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\r\n\r\n\r\nconst Detail = ({ data }) => {\r\n  const poster = (data.Poster === \"N/A\") ? DEFAULT_PLACEHOLDER_IMAGE : data.Poster;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page\">\r\n        <div className=\"breadcrumbs\">\r\n          <a href=\"/React-Hooker/\">Home</a>\r\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\r\n          <span>Movie Review</span>\r\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\r\n          <span>{ data.Title }</span>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <figure className=\"movie-poster\"><img src={poster} alt=\"#\"/></figure>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <h2 className=\"movie-title\">{data.Title}</h2>\r\n              <div className=\"movie-plot\">\r\n                <p>{ data.Plot }</p>\r\n              </div>\r\n              <ul className=\"movie-meta\">\r\n                <li><strong>Rating:</strong>\r\n                  {\r\n                    data.Ratings.map((rating, index) => (\r\n                      <div key={index} className=\"rating\">\r\n                        <strong className=\"Source\"><i>{ rating.Source }: </i></strong>\r\n                        <span className=\"value\">{rating.Value}</span>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </li>\r\n                <li><strong>Runtime:</strong> { data.Runtime }</li>\r\n                <li><strong>Released:</strong> { data.Released } ({data.Country})</li>\r\n                <li><strong>Category:</strong> { data.Genre }</li>\r\n              </ul>\r\n\r\n              <ul className=\"starring\">\r\n                <li><strong>Directors:</strong> { data.Director }</li>\r\n                <li><strong>Writers:</strong> { data.Writer }</li>\r\n                <li><strong>Actors:</strong> {data.Actors}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"entry-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <p><strong>Awards:</strong> {data.Awards}</p>\r\n                <p><strong>Language:</strong> {data.Language}</p>\r\n                <p><strong>Metascore:</strong> {data.Metascore}</p>\r\n                <p><strong>imdbRating:</strong> {data.imdbRating}</p>\r\n                <p><strong>imdbVotes:</strong> {data.imdbVotes}</p>\r\n              </div>\r\n              <div className=\"col-6\">\r\n              <p><strong>imdbID:</strong> {data.imdbID}</p>\r\n              <p><strong>Type:</strong> {data.Type}</p>\r\n              <p><strong>DVD:</strong> {data.DVD}</p>\r\n              <p><strong>BoxOffice:</strong> {data.BoxOffice}</p>\r\n              <p><strong>Production:</strong> {data.Production}</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"./Detail\";\r\nimport \"../Detail.css\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: {},\r\n  errorMessage: false\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DETAIL_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: false\r\n      };\r\n    case \"DETAIL_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    case \"DETAIL_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Review = ({ match: { params } }) => {\r\n  const { id } = params;\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const DETAIL_MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&i=${id}`;\r\n\r\n  useEffect(() => {\r\n    fetch(DETAIL_MOVIE_API_URL)\r\n      .then(response => response.json())\r\n      .then(jsonResponse => {\r\n  \r\n      dispatch({\r\n        type: \"DETAIL_MOVIES_SUCCESS\",\r\n        payload: jsonResponse\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  const { data, errorMessage, loading } = state;\r\n\r\n  return (\r\n    <div className=\"Detail\">\r\n      <Header text=\"Movie Review\" />\r\n      <div>\r\n        {loading && !errorMessage ? (\r\n          <div className=\"container\">\r\n            <div className=\"text-center col-12\">\r\n              <div className=\"spinner-grow\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : errorMessage ? (\r\n          <div className=\"errorMessage\">{errorMessage}</div>\r\n        ) : (\r\n          <Detail  data={data} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Review;","import React from \"react\";\r\nimport \"../error.css\";\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"error-page\">\r\n      <div>\r\n        <h1 data-h1=\"404\">404</h1>\r\n        <p data-p=\"Page doesn't exist\">Page doesn't exist</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error404;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\n\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './components/App';\r\nimport Review from './components/Review';\r\nimport NoMatch from './components/Error404'\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render((\r\n  <Router basename=\"/React-Hooker\">\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <App />\r\n      </Route>\r\n\r\n      <Route path=\"/review/:id\" component={Review} />\r\n\r\n      <Route>\r\n        <NoMatch />\r\n      </Route>\r\n    </Switch>\r\n  </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}