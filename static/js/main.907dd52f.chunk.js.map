{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Movie.js","components/Search.js","components/Error.js","components/App.js","components/Detail.js","components/Review.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","props","className","text","Movie","movie","Poster","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","Error","error","data-h1","number","data-p","name","MOVIE_API_URL","initialState","loading","data","errorMessage","reducer","state","action","payload","App","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","movies","activePage","totalCount","parseInt","totalResults","Response","role","map","index","key","Title","to","imdbID","align","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","Detail","poster","href","aria-hidden","src","alt","Plot","Ratings","rating","Source","Value","Runtime","Released","Country","Genre","Director","Writer","Actors","Awards","Language","Metascore","imdbRating","imdbVotes","Type","DVD","BoxOffice","Production","Review","id","params","DETAIL_MOVIE_API_URL","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.907dd52f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h2>{props.text}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\r\nconst Movie = ({ movie }) => {\r\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\r\n  return (\r\n    // <div className=\"movie\">\r\n      <div className=\"item\">\r\n        <div style =\r\n          {{\r\n            backgroundImage: `url(${poster})`,\r\n            backgroundSize: 'cover', \r\n            backgroundPosition: 'center center',\r\n            backgroundRepeat: 'no-repeat',\r\n            width: '100%',\r\n            paddingTop: '120%'\r\n          }}\r\n        >\r\n        </div>\r\n        <h2 className=\"title overflow-ellipsis\">{movie.Title}</h2>\r\n        <p>({movie.Year})</p>\r\n      </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  \r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  // const resetInputField = () => {\r\n  //   setSearchValue(\"\")\r\n  // }\r\n\r\n  const callSearchFunction = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    // resetInputField();\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\">\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleSearchInputChanges}\r\n          type=\"text\"\r\n        />\r\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport \"../error.css\";\r\n\r\nconst Error = ({error}) => {\r\n  return (\r\n    <div className=\"error-page\">\r\n      <div>\r\n        <h1 data-h1={error.number}>{error.number}</h1>\r\n          <p data-p={error.name}>{error.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import React, { useReducer, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Pagination from \"react-js-pagination\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport Error from \"./Error\";\nimport \"../App.css\";\n\nconst searchDefault = \"Spider Man\";\n\nconst MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&s=${searchDefault}`;\n\n\nconst initialState = {\n  loading: true,\n  data: {},\n  errorMessage: null\n};\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: null\n      };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    case \"HANDLE_PAGE_CHANGE\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    \n    fetch(MOVIE_API_URL)\n        .then(response => response.json())\n        .then(jsonResponse => {\n    \n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: {\n            movies: jsonResponse.Search,\n            activePage: 1,\n            totalCount: parseInt(jsonResponse.totalResults),\n            searchValue: searchDefault\n          }\n        });\n    });\n  }, []);\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n\n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${searchValue}`)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: {\n            movies: jsonResponse.Search,\n            activePage: 1,\n            totalCount: parseInt(jsonResponse.totalResults),\n            searchValue: searchValue\n          }\n        });\n      } else if(jsonResponse.Error === \"Something went wrong.\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: state.data\n        });\n      } else {\n        dispatch({\n            type: \"SEARCH_MOVIES_FAILURE\",\n            error: jsonResponse.Error\n        });\n      }\n    });\n  };\n\n\n  const { data, errorMessage, loading } = state;\n\n  const handlePageChange = (pageNumber) => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n    \n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${data.searchValue}&page=${pageNumber}`)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: {\n            movies: jsonResponse.Search,\n            activePage: parseInt(pageNumber),\n            totalCount: parseInt(jsonResponse.totalResults),\n            searchValue: data.searchValue\n          }\n        });\n      } else {\n        dispatch({\n            type: \"SEARCH_MOVIES_FAILURE\",\n            error: jsonResponse.Error\n        });\n      }\n    });\n  }\n  // debugger;\n  return (\n    <div className=\"App\">\n      <Header text=\"Search Films\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <div className=\"text-center col-12\">\n            <div className=\"spinner-grow\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          data.movies.map((movie, index) => (\n            <Link key={`${index}-${movie.Title}`} className=\"movie\" to={`/React-Hooker/review/${movie.imdbID}`}>\n              <Movie movie={movie} />\n            </Link>\n          ))\n        )}\n      </div>\n      {(!loading && !errorMessage) && (\n        <div align=\"center\">\n          <Pagination\n            activePage={data.activePage}\n            itemsCountPerPage={10}\n            totalItemsCount={data.totalCount || 0}\n            pageRangeDisplayed={5}\n            onChange={handlePageChange}\n          />\n        </div>\n      )}\n    </div>\n  ) || <Error error={{number: 404, name: \"NOT FOUND\"}} />;\n};\n\nexport default App;","import React from \"react\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\r\n\r\n\r\nconst Detail = ({ data }) => {\r\n  const poster = (data.Poster === \"N/A\") ? DEFAULT_PLACEHOLDER_IMAGE : data.Poster;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"page\">\r\n        <div className=\"breadcrumbs\">\r\n          <a href=\"/React-Hooker/\">Home</a>\r\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\r\n          <span>Movie Review</span>\r\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\r\n          <span>{ data.Title }</span>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <figure className=\"movie-poster\"><img src={poster} alt=\"#\"/></figure>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <h2 className=\"movie-title\">{data.Title}</h2>\r\n              <div className=\"movie-plot\">\r\n                <p>{ data.Plot }</p>\r\n              </div>\r\n              <ul className=\"movie-meta\">\r\n                <li><strong>Rating:</strong>\r\n                  {\r\n                    data.Ratings.map((rating, index) => (\r\n                      <div key={index} className=\"rating\">\r\n                        <strong className=\"Source\"><i>{ rating.Source }: </i></strong>\r\n                        <span className=\"value\">{rating.Value}</span>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </li>\r\n                <li><strong>Runtime:</strong> { data.Runtime }</li>\r\n                <li><strong>Released:</strong> { data.Released } ({data.Country})</li>\r\n                <li><strong>Category:</strong> { data.Genre }</li>\r\n              </ul>\r\n\r\n              <ul className=\"starring\">\r\n                <li><strong>Directors:</strong> { data.Director }</li>\r\n                <li><strong>Writers:</strong> { data.Writer }</li>\r\n                <li><strong>Actors:</strong> {data.Actors}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"entry-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <p><strong>Awards:</strong> {data.Awards}</p>\r\n                <p><strong>Language:</strong> {data.Language}</p>\r\n                <p><strong>Metascore:</strong> {data.Metascore}</p>\r\n                <p><strong>imdbRating:</strong> {data.imdbRating}</p>\r\n                <p><strong>imdbVotes:</strong> {data.imdbVotes}</p>\r\n              </div>\r\n              <div className=\"col-6\">\r\n              <p><strong>imdbID:</strong> {data.imdbID}</p>\r\n              <p><strong>Type:</strong> {data.Type}</p>\r\n              <p><strong>DVD:</strong> {data.DVD}</p>\r\n              <p><strong>BoxOffice:</strong> {data.BoxOffice}</p>\r\n              <p><strong>Production:</strong> {data.Production}</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Detail from \"./Detail\";\r\nimport Error from \"./Error\";\r\nimport \"../Detail.css\";\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  data: {},\r\n  errorMessage: null\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DETAIL_MOVIES_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        errorMessage: null\r\n      };\r\n    case \"DETAIL_MOVIES_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: action.payload\r\n      };\r\n    case \"DETAIL_MOVIES_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Review = ({ match: { params } }) => {\r\n  const { id } = params;\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const DETAIL_MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&i=${id}`;\r\n\r\n  useEffect(() => {\r\n      fetch(DETAIL_MOVIE_API_URL)\r\n        .then(response => response.json())\r\n        .then(jsonResponse => {\r\n    \r\n        dispatch({\r\n          type: \"DETAIL_MOVIES_SUCCESS\",\r\n          payload: jsonResponse\r\n        });\r\n      });\r\n  }, [DETAIL_MOVIE_API_URL]);\r\n\r\n\r\n  const { data, errorMessage, loading } = state;\r\n\r\n  return (\r\n    <div className=\"Detail\">\r\n      <Header text=\"Movie Review\" />\r\n      <div>\r\n        {loading && !errorMessage ? (\r\n          <div className=\"container\">\r\n            <div className=\"text-center col-12\">\r\n              <div className=\"spinner-grow\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : errorMessage ? (\r\n          <div className=\"errorMessage\">{errorMessage}</div>\r\n        ) : (\r\n          <Detail  data={data} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  ) || <Error error={{number: 404, name: \"NOT FOUND\"}} />;\r\n};\r\n\r\nexport default Review;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Review from './components/Review';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render((\n  <Router>\n    <Route exact path=\"/React-Hooker/\" component={App} />\n    <Route path=\"/React-Hooker/review/:id\" component={Review} />\n  </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();"],"sourceRoot":""}