{"version":3,"sources":["serviceWorker.js","components/Header.js","components/Movie.js","components/Search.js","components/App.js","components/Detail.js","components/Review.js","components/Errors.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","props","className","text","Movie","movie","poster","Poster","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","width","paddingTop","titlle","Title","Year","Search","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","MOVIE_API_URL","initialState","loading","data","errorMessage","reducer","state","action","payload","error","App","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","movies","activePage","totalCount","parseInt","totalResults","Response","Error","role","map","index","key","to","imdbID","align","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","pageNumber","Detail","aria-hidden","src","alt","Plot","Ratings","rating","Source","Value","Runtime","Released","Country","Genre","Director","Writer","Actors","Website","href","Awards","Language","Metascore","imdbRating","imdbVotes","Type","DVD","BoxOffice","Production","Review","id","params","DETAIL_MOVIE_API_URL","Errors","data-h1","number","data-p","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b277f9d6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\nconst Header = (props) => {\n  return (\n    <header className=\"App-header\">\n      <h2>{props.text}</h2>\n    </header>\n  );\n};\n\nexport default Header;","import React from \"react\";\n\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\n\n\nconst Movie = ({ movie }) => {\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n  return (\n    <div className=\"item\">\n      <div style =\n        {{\n          backgroundImage: `url(${poster})`,\n          backgroundSize: 'cover', \n          backgroundPosition: 'center center',\n          backgroundRepeat: 'no-repeat',\n          width: '100%',\n          paddingTop: '120%'\n        }}\n      >\n      </div>\n      <h3 className=\"title overflow-ellipsis\" titlle={movie.Title}>{movie.Title}</h3>\n      <p>({movie.Year})</p>\n    </div>\n  );\n};\n\n\nexport default Movie;","import React, { useState } from \"react\";\n\n\nconst Search = (props) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  \n  const handleSearchInputChanges = (e) => {\n    setSearchValue(e.target.value);\n  }\n\n  // const resetInputField = () => {\n  //   setSearchValue(\"\")\n  // }\n\n  const callSearchFunction = (e) => {\n    e.preventDefault();\n    props.search(searchValue);\n    // resetInputField();\n  }\n\n  return (\n      <form className=\"search\">\n        <input\n          value={searchValue}\n          onChange={handleSearchInputChanges}\n          type=\"text\"\n        />\n        <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n      </form>\n    );\n}\n\nexport default Search;","import React, { useReducer, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Pagination from \"react-js-pagination\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport \"../App.css\";\n\nconst searchDefault = \"Spider Man\";\n\nconst MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&s=${searchDefault}`;\n\n\nconst initialState = {\n  loading: true,\n  data: {},\n  errorMessage: false\n};\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: false\n      };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    case \"HANDLE_PAGE_CHANGE\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    \n    fetch(MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n  \n      dispatch({\n        type: \"SEARCH_MOVIES_SUCCESS\",\n        payload: {\n          movies: jsonResponse.Search,\n          activePage: 1,\n          totalCount: parseInt(jsonResponse.totalResults),\n          searchValue: searchDefault\n        }\n      });\n    });\n  }, []);\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n\n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${searchValue}`)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: {\n            movies: jsonResponse.Search,\n            activePage: 1,\n            totalCount: parseInt(jsonResponse.totalResults),\n            searchValue: searchValue\n          }\n        });\n      } else if(jsonResponse.Error === \"Something went wrong.\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: state.data\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_MOVIES_FAILURE\",\n          error: jsonResponse.Error\n        });\n      }\n    });\n  };\n\n\n  const { data, errorMessage, loading } = state;\n\n  const handlePageChange = (pageNumber) => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n    \n    fetch(`https://www.omdbapi.com/?apikey=4a3b711b&s=${data.searchValue}&page=${pageNumber}`)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: {\n            movies: jsonResponse.Search,\n            activePage: parseInt(pageNumber),\n            totalCount: parseInt(jsonResponse.totalResults),\n            searchValue: data.searchValue\n          }\n        });\n      } else {\n        dispatch({\n            type: \"SEARCH_MOVIES_FAILURE\",\n            error: jsonResponse.Error\n        });\n      }\n    });\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header text=\"Search Movies\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {(loading && !errorMessage) ? (\n          <div className=\"text-center col-12\">\n            <div className=\"spinner-grow\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          data.movies.map((movie, index) => (\n            <Link key={`${index}-${movie.Title}`} className=\"movie\" to={`/review/${movie.imdbID}`}>\n              <Movie movie={movie} />\n            </Link>\n          ))\n        )}\n      </div>\n      {(!loading && !errorMessage) && (\n        <div align=\"center\">\n          <Pagination\n            activePage={data.activePage}\n            itemsCountPerPage={10}\n            totalItemsCount={data.totalCount || 1}\n            pageRangeDisplayed={5}\n            onChange={handlePageChange}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.min.css';\nconst DEFAULT_PLACEHOLDER_IMAGE = \"https://img.icons8.com/plasticine/400/000/image-file.png\";\n\n\nconst Detail = ({ data }) => {\n  const poster = (data.Poster === \"N/A\") ? DEFAULT_PLACEHOLDER_IMAGE : data.Poster;\n\n  return (\n    <div className=\"container\">\n      <div className=\"page\">\n        <div className=\"breadcrumbs\">\n          <Link to=\"/\">Home</Link>\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\n          <span>Movie Review</span>\n          <i className=\"fa fa-angle-right mx-2\" aria-hidden=\"true\"></i>\n          <span>{ data.Title }</span>\n        </div>\n\n        <div className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <figure className=\"movie-poster\"><img src={poster} alt=\"#\"/></figure>\n            </div>\n            <div className=\"col-md-8\">\n              <h2 className=\"movie-title\">{data.Title}</h2>\n              <div className=\"movie-plot\">\n                <p>{ data.Plot }</p>\n              </div>\n              <ul className=\"movie-meta\">\n                <li><strong>Rating:</strong>\n                  {\n                    data.Ratings.map((rating, index) => (\n                      <div key={index} className=\"rating\">\n                        <strong className=\"Source\"><i>{ rating.Source }: </i></strong>\n                        <span className=\"value\">{rating.Value}</span>\n                      </div>\n                    ))\n                  }\n                </li>\n                <li><strong>Runtime:</strong> { data.Runtime }</li>\n                <li><strong>Released:</strong> { data.Released } ({data.Country})</li>\n                <li><strong>Category:</strong> { data.Genre }</li>\n              </ul>\n\n              <ul className=\"starring\">\n                <li><strong>Directors:</strong> { data.Director }</li>\n                <li><strong>Writers:</strong> { data.Writer }</li>\n                <li><strong>Actors:</strong> {data.Actors}</li>\n                {(data.Website !== \"N/A\") && (\n                  <li>\n                    <strong>Website: </strong> <a href={data.Website}>{data.Website}</a>\n                  </li>\n                )}\n              </ul>\n            </div>\n          </div>\n          <div className=\"entry-content\">\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <p><strong>Awards:</strong> {data.Awards}</p>\n                <p><strong>Language:</strong> {data.Language}</p>\n                <p><strong>Metascore:</strong> {data.Metascore}</p>\n                <p><strong>imdbRating:</strong> {data.imdbRating}</p>\n                <p><strong>imdbVotes:</strong> {data.imdbVotes}</p>\n              </div>\n              <div className=\"col-6\">\n              <p><strong>imdbID:</strong> {data.imdbID}</p>\n              <p><strong>Type:</strong> {data.Type}</p>\n              <p><strong>DVD:</strong> {data.DVD}</p>\n              <p><strong>BoxOffice:</strong> {data.BoxOffice}</p>\n              <p><strong>Production:</strong> {data.Production}</p>\n            </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { useReducer, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Detail from \"./Detail\";\nimport \"../Detail.css\";\n\n\nconst initialState = {\n  loading: true,\n  data: {},\n  errorMessage: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DETAIL_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: false\n      };\n    case \"DETAIL_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case \"DETAIL_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\n\nconst Review = ({ match: { params } }) => {\n  const { id } = params;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const DETAIL_MOVIE_API_URL = `https://www.omdbapi.com/?apikey=4a3b711b&i=${id}`;\n\n  useEffect(() => {\n    fetch(DETAIL_MOVIE_API_URL)\n      .then(response => response.json())\n      .then(jsonResponse => {\n  \n      dispatch({\n        type: \"DETAIL_MOVIES_SUCCESS\",\n        payload: jsonResponse\n      });\n    });\n  }, [DETAIL_MOVIE_API_URL]);\n\n  const { data, errorMessage, loading } = state;\n\n  return (\n    <div className=\"Detail\">\n      <Header text=\"Movie Review\" />\n      <div>\n        {loading && !errorMessage ? (\n          <div className=\"container\">\n            <div className=\"text-center col-12\">\n              <div className=\"spinner-grow\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          <Detail  data={data} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Review;","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"../error.css\";\n\n\nconst Errors = ({error}) => {\n  return (\n    <div className=\"error-page\">\n      <div className=\"content\">\n        <h1 data-h1={ error.number }>{ error.number }</h1>\n        <p data-p={ error.text }>{ error.text }</p>\n      </div>\n      <Link className=\"back\" to=\"/\">GO BACK</Link>\n    </div>\n  );\n}\n\nexport default Errors;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\n\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport Review from './components/Review';\nimport Errors from './components/Errors'\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render((\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={App} />\n      <Route exact  path=\"/review/:id\" component={Review} />\n\n      <Route>\n        <Errors error={{ number: 404, text: \"NOT FOUND\" }} />\n      </Route>\n    </Switch>\n  </Router>\n), document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}